{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","gif","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","img","GifExpertApp","categories","i","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAoB9C,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SArBc,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QATtB,kBAaZM,GAbY,4CAAH,sDCCPO,EAAc,SAAC,GAAsB,IAArBJ,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAIpC,OAFAc,QAAQC,IAAI,CAACN,KAAIC,QAAOV,QAGpB,sBAAKgB,UAAU,yCAAf,UACI,qBAAKC,IAAMjB,EAAMkB,IAAMR,IACvB,kCAAMA,EAAN,WCLCS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EACdd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAqBxC,OAfAC,qBAAU,WAEN1B,EAASC,GACJ0B,MAAK,SAAAC,GAEFH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAKvB,CAAEtB,IAGGuB,EDlBkBK,CAAc5B,GAAhCO,EAF8B,EAE9BA,KAAMe,EAFwB,EAExBA,QAGb,OACI,qCACI,oBAAIJ,UAAU,yCAAd,SAAyDlB,IAEvDsB,GAAW,mBAAGJ,UAAU,wCAAb,wBAEb,qBAAKA,UAAU,YAAf,SAGQX,EAAKE,KAAI,SAAAoB,GAAG,OACR,cAAC,EAAD,eAESA,GADCA,EAAIlB,aESvBmB,EAzBM,WAAO,IAAD,EAEc5C,mBAAS,CAAC,gBAFxB,mBAEhB6C,EAFgB,KAEJ9C,EAFI,KAIvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAGA,6BAEQ8C,EAAWtB,KAAI,SAACT,EAAUgC,GAAX,OACX,cAAC,EAAD,CAEIhC,SAAWA,GADLA,EAAWgC,Y,MCd7CC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c092c3bc.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n\r\n        setInputValue(e.target.value);\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n        //console.log('submit');\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\nexport const getGifs = async( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=hOjf4F6ddHyeOWg1DS5HJCDT1ICd0QEY`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( gif => {\r\n        return {\r\n            id: gif.id,\r\n            title: gif.title,\r\n            url: gif.images.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react';\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n    console.log({id, title, url});\r\n\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img src={ url } alt={ title } />\r\n            <p> { title } </p>\r\n        </div>    \r\n    )\r\n}","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from '../components/GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const {data, loading } = useFetchGifs( category );\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className='card animate__animated animate__fadeIn'>{ category }</h3>\r\n\r\n            { loading && <p className='card animate__animated animate__flash'>Loading...</p>  }\r\n\r\n            <div className='card-grid'>\r\n            \r\n                {\r\n                    data.map(img => (\r\n                        <GifGridItem \r\n                            key={ img.id } \r\n                            { ...img }\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs( category )\r\n            .then(imgs => {\r\n\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n\r\n            });\r\n\r\n    },[ category ])\r\n\r\n\r\n    return state; // { data: [], loading: true }\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories ] = useState(['Dragon Ball']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr/>\r\n\r\n\r\n            <ul>\r\n                {\r\n                    categories.map((category, i) => (\r\n                        <GifGrid \r\n                            key={ category + i}\r\n                            category={ category }\r\n                        />\r\n                    ))\r\n                }\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp'\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}